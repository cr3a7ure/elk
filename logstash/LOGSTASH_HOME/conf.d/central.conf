input {	
	beats {
		port => 5044
	#	type => "access.feature"
       		client_inactivity_timeout => 3600
	}

	#file {
	#	path => "C:/Users/waeber/Desktop/test_logs/*.log"
	#	start_position => "beginning"
	#	sincedb_path => "C:/Users/waeber/Desktop/sincedb.txt"
	#}
}

filter {
	grok {
	    patterns_dir => ["/etc/logstash/conf.d/patterns"]
		#patterns_dir => ["C:/Users/waeber/elk/logstash/LOGSTASH_HOME/conf.d/patterns"]
	    match => { "message" => "%{SWISSBIBLOG}" }
	}
	
	date {
		match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
		target => "@timestamp"
		remove_field => [ "timestamp" ]
    }

	if ([useragent] =~ /-/) {
       	drop{}
	}

    if ([message] =~ /(the\+art\+of\+computer\+programming)|(\/themes)|(^"-" - - )|(GET \/apple-touch-icon)|(GET \/favicon.ico)|(GET \/\?lng)|(GET \/" 200 19698 "-" "-")|(\/Cover\/Show)/) {
       	drop{}
    }
	
	if ([responsesize] =~ /-/){
		mutate {
			remove_field => [ "responsesize" ]
		}
	}
	
	if ([referrer] =~ /-/) {
		mutate {
			remove_field => [ "referrer" ]
		}
	}

	if ([forwardip] =~ /-/) {
		mutate {
			remove_field => [ "forwardip" ]
		}
	}
	
	if ([forwardip] =~ /,/) {
		mutate {
			gsub => [ "forwardip", " ", "" ]
			split => { "forwardip" => "," }
		}
	}

	if ([forwardip] =~ /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/) {
		geoip {
			source => "forwardip"
			#database => "C:/Users/waeber/Desktop/logstash-5.3.3/vendor/bundle/jruby/1.9/gems/logstash-filter-geoip-4.0.4-java/vendor/GeoLite2-City.mmdb"
			database => "/etc/logstash/geoip/GeoLite2-City.mmdb"

			target => "geoip"
			fields => ["city_name", "country_name", "location"]
			add_tag => [ "apache-geoip" ]
			tag_on_failure => ["_geoip_lookup_failure"]
		}
	}
	
	# searches for holding requests and extracts the holding identifiers.
	# and stores the value in a new field 'library_code'
	if ([request] =~ /\/Holdings\/\d*\/.+/) {
		grok {
			id => "request_grok"
			match => { "request" => "\/Holdings\/\d*\/%{WORD:library_code}"
		}	
	}
	
	
    if ([host] =~ /sb-uvf1|sb-uvf2|sb-uvf3/) {
		mutate {
			add_field => {"sourcetype" => "presentationgreen" } 
		}
    } 


    if ([host] =~ /sb-uvf9|sb-uvf10|sb-uvf11/) {
		mutate {
			add_field => {"sourcetype" => "presentationbb" } 
		}
    } 

    if ([host] =~ /sb-uvf5/) {
		mutate {
			add_field => {"sourcetype" => "presentationjus" } 
		}
    } 

    if ([message] =~ /Googlebot|bingbot|Slurp|YandexBot|AhrefsBot|MegaIndex\.ru|BLEXBot|Baiduspider|SemrushBot/) {
		grok {
			match => { "message" => "(?<bot>Googlebot|bingbot|Slurp|YandexBot|AhrefsBot|MegaIndex\.ru|BLEXBot|Baiduspider|SemrushBot)" }
		}
    }
}

output {

    if ([sourcetype] == "presentationgreen") {
		elasticsearch { 
			hosts => ["sb-uesl1.swissbib.unibas.ch:8080"]
			#template => "C:/Users/waeber/elk/logstash/LOGSTASH_HOME/conf.d/es_template/apache_template.json"
			template => "/etc/logstash/conf.d/es_template/apache_template.json"

			template_name => "apache_template"
			template_overwrite => true
			index => "swissbib-green-%{+YYYY}"
			document_type => "logs"
		}
    }

    if ([sourcetype] == "presentationbb") {
		elasticsearch { 
			hosts => ["sb-uesl1.swissbib.unibas.ch:8080"]
			#template => "C:/Users/waeber/elk/logstash/LOGSTASH_HOME/conf.d/es_template/apache_template.json"
			template => "/etc/logstash/conf.d/es_template/apache_template.json"
			template_name => "apache_template"
			template_overwrite => true
			index => "swissbib-bb-%{+YYYY}"
			document_type => "logs"
		}
    }

    if ([sourcetype] == "presentationjus") {
		elasticsearch { 
			hosts => ["sb-uesl1.swissbib.unibas.ch:8080"]
			#template => "C:/Users/waeber/elk/logstash/LOGSTASH_HOME/conf.d/es_template/apache_template.json"
			template => "/etc/logstash/conf.d/es_template/apache_template.json"
			template_name => "apache_template"
			template_overwrite => true
			index => "swissbib-jus-%{+YYYY}"
			document_type => "logs"
		}
    }
}
